{"version":3,"sources":["comps/Authors.js","comps/Books.js","App.js","reportWebVitals.js","index.js"],"names":["Authors","props","Fragment","authorList","map","author","i","firstName","lastName","Books","fetchSelectedBooks","ev","a","id","target","getAttribute","fetch","specificBook","json","specificBookData","setShownBook","bookList","book","onClick","name","bookName","App","useState","books","setBooks","authors","setAuthors","shownBook","getAuthor","authId","filter","auth","useEffect","booksData","authorsData","fetchBooks","fetchAuthors","className","Object","keys","length","isbn","authorId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAsBeA,MAlBf,SAAiBC,GAGb,OACI,eAAC,IAAMC,SAAP,WACI,6CACCD,EAAME,WAAWC,KAAI,SAACC,EAAQC,GAC3B,OACI,8BACI,0CAAoBD,EAAOE,UAA3B,YAAwCF,EAAOG,WAAnCF,YCerBG,MAzBf,SAAeR,GAAQ,SAEJS,EAFG,8EAElB,WAAkCC,GAAlC,mBAAAC,EAAA,6DACQC,EAAKF,EAAGG,OAAOC,aAAa,QADpC,SAE6BC,MAAM,SAAWH,GAF9C,cAEQI,EAFR,gBAGiCA,EAAaC,OAH9C,OAGQC,EAHR,OAIIlB,EAAMmB,aAAaD,GAJvB,4CAFkB,sBASlB,OACI,eAAC,IAAMjB,SAAP,WACI,2CAECD,EAAMoB,SAASjB,KAAI,SAACkB,EAAMhB,GACvB,OACI,8BACI,uBAAOiB,QAASb,EAA4Bc,KAAMF,EAAKT,GAAvD,SAA6DS,EAAKG,UAAzBnB,YCyDlDoB,MAtEf,WAEE,MAAwBC,mBAAS,IAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAA4BF,mBAAS,IAArC,mBAAKG,EAAL,KAAcC,EAAd,KAEA,EAAgCJ,mBAAS,IAAzC,mBAAKK,EAAL,KAAgBZ,EAAhB,KAoBA,SAASa,EAAUC,GACjB,IAAI7B,EAASyB,EAAQK,QAAO,SAAAC,GAAI,OAAIA,EAAKvB,IAAMqB,KAE/C,OADA7B,EAASA,EAAO,GAAGE,UAAY,IAAMF,EAAO,GAAGG,SAIjD,OAxBA6B,qBAAU,WAAM,4CAEd,8BAAAzB,EAAA,sEACoBI,MAAM,UAD1B,cACMY,EADN,gBAEwBA,EAAMV,OAF9B,OAEMoB,EAFN,OAGET,EAASS,GAHX,2CAFc,oEAOd,8BAAA1B,EAAA,sEACsBI,MAAM,YAD5B,cACMc,EADN,gBAE0BA,EAAQZ,OAFlC,OAEMqB,EAFN,OAGER,EAAWQ,GAHb,2CAPc,yBAAC,WAAD,wBAadC,GAbc,mCAcdC,KAEC,IASD,qBAAKC,UAAU,kBAAf,SACE,sBAAKA,UAAU,cAAf,UAEE,0DACE,WACA,GAAsC,IAAlCC,OAAOC,KAAKZ,GAAWa,OACzB,OACE,sBAAKH,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,2BAEE,uBAFF,SAGSV,EAAUP,SACjB,uBAJF,kBAKkBO,EAAUc,KAC1B,uBANF,WAOWb,EAAUD,EAAUe,aAE/B,qBAAKL,UAAU,aAbrB,GAoBF,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAOtB,aAAcA,EAAcC,SAAUO,MAE/C,qBAAKc,UAAU,QAAf,SACE,cAAC,EAAD,CAASvC,WAAY2B,eCvDlBkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.934eb6a9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nfunction Authors(props) {\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h1>Author List</h1>\r\n            {props.authorList.map((author, i) => {\r\n                return (\r\n                    <div>\r\n                        <label key={i} >{`${author.firstName} ${author.lastName}`}</label>\r\n                    </div>\r\n                )\r\n            })}\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Authors","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\nfunction Books(props) {\r\n\r\n    async function fetchSelectedBooks(ev) {\r\n        let id = ev.target.getAttribute(\"name\")\r\n        let specificBook = await fetch('/book/' + id)\r\n        let specificBookData = await specificBook.json()\r\n        props.setShownBook(specificBookData)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h1>Book List</h1>\r\n\r\n            {props.bookList.map((book, i) => {\r\n                return (\r\n                    <div>\r\n                        <label onClick={fetchSelectedBooks} key={i} name={book.id} >{book.bookName}</label>\r\n                    </div>\r\n                )\r\n            })}\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Books","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport './App.css';\nimport Authors from './comps/Authors';\nimport Books from './comps/Books';\n\nfunction App() {\n\n  let [books, setBooks] = useState([])\n  let [authors, setAuthors] = useState([])\n\n  let [shownBook, setShownBook] = useState({})\n\n  useEffect(() => {\n\n    async function fetchBooks() {\n      let books = await fetch('/books')\n      let booksData = await books.json()\n      setBooks(booksData)\n    }\n    async function fetchAuthors() {\n      let authors = await fetch('/authors')\n      let authorsData = await authors.json()\n      setAuthors(authorsData)\n    }\n\n    fetchBooks()\n    fetchAuthors()\n\n  }, [])\n\n  function getAuthor(authId) {\n    let author = authors.filter(auth => auth.id == authId)\n    author = author[0].firstName + \" \" + author[0].lastName\n    return author\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"text-center\">\n\n        <h1>Welcome to skimarztki :)</h1>\n        {(() => {\n          if (Object.keys(shownBook).length !== 0) {\n            return (\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  Selected book:\n                  <br></br>\n                  Name: {shownBook.bookName}\n                  <br></br>\n                  Serial number: {shownBook.isbn}\n                  <br></br>\n                  Author: {getAuthor(shownBook.authorId)}\n                </div>\n                <div className=\"col-6\">\n\n                </div>\n              </div>\n            )\n          }\n        })()}\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <Books setShownBook={setShownBook} bookList={books}></Books>\n          </div>\n          <div className=\"col-6\">\n            <Authors authorList={authors}></Authors>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}